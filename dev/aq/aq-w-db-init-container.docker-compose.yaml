version: "3.8"

services:

  aq:
    image: ghcr.io/idsia/adapquest:v1.6.1
    restart: unless-stopped
    depends_on:
      - db-init
      - timescale
    ports:
      - 8080:8080
    networks:
      - e2etest
    environment:
      MAGIC_API_KEY: "QWRhcHRpdmUgU3VydmV5"

      DB_DBMS: "postgresql"
      DB_HOSTNAME: "timescale"
      DB_PORT: "5432"
      DB_SCHEMA: "adaptive"
      DB_USERNAME: "ada"
      DB_PASSWORD: "*"

      ADAPQUEST_CONTROLLER_ASSISTANT: "false"
      ADAPQUEST_CONTROLLER_CONSOLE: "true"
      ADAPQUEST_CONTROLLER_DASHBOARD: "false"
      ADAPQUEST_CONTROLLER_DEMO: "true"
      ADAPQUEST_CONTROLLER_EXPERIMENTS: "false"
    volumes:
      - ./surveys:/adaptive/data/surveys

  # NOTE why an init shell script?
  # You could run your SQL directly in Postgres at startup---see other Docker
  # Compose file. That's the best approach for testing locally, but we can't
  # use that approach in the cloud in general b/c every time you wanted to
  # run some SQL you'd have to bounce the Postgres server.
  db-init:
    image: timescale/timescaledb-postgis:2.3.0-pg13
    depends_on:
      - timescale
    environment:
      - CONN_URI=postgresql://postgres:*@timescale
      - AQ_DB=adaptive
      - AQ_USER=ada
      - AQ_PASS=*
    command:
      - sh
      - /bootstrap.sh
    networks:
      - e2etest
    volumes:
      - ./bootstrap.sh:/bootstrap.sh

  timescale:
    image: timescale/timescaledb-postgis:2.3.0-pg13
    ports:
      - "5432:5432"
    networks:
      - e2etest
    environment:
      - POSTGRES_PASSWORD=*

networks:
  e2etest:
    driver: bridge
